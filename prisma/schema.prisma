// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider             = "prisma-client-js"
  referentialIntegrity = "foreignKeys"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Space {
  id     Int    @id @default(autoincrement())
  name   String
  roleId String? @unique

  exclusiveRoles ExclusiveRole[]
  categories     Category[]
  categoryDefaultPermissions CategoryDefaultPermission[]
  users UsersOnSpaces[]
}

model User {
  id String @id
  isRoot Boolean @default(false)
  spaces UsersOnSpaces[]
}

model UsersOnSpaces {
  spaceId Int
  space Space @relation(fields: [spaceId], references: [id])
  userId String
  user User @relation(fields: [userId], references: [id])

  @@id([userId, spaceId])
}

model ExclusiveRole {
  spaceId Int
  space   Space  @relation(fields: [spaceId], references: [id])
  roleId  String

  @@id([spaceId, roleId])
}

model Category {
  discordId String
  spaceId   Int
  space     Space  @relation(fields: [spaceId], references: [id])
  order     Int    @default(0)

  permissions Permission[]

  @@id([spaceId, discordId])
}

model CategoryDefaultPermission {
  roleId String
  permission String
  type Int
  spaceId Int
  space Space @relation(fields: [spaceId], references: [id])

  @@id([roleId, spaceId, type])
}

model Permission {
  spaceId           Int
  categoryDiscordId String
  permission String

  roleId   String
  category Category @relation(fields: [spaceId, categoryDiscordId], references: [spaceId, discordId])
  type     Int

  @@id([categoryDiscordId, spaceId, roleId, type])
}
